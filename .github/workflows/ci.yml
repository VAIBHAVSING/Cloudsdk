name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test (Go ${{ matrix.go-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      - name: Download dependencies
        working-directory: ./go
        run: go mod download

      - name: Verify dependencies
        working-directory: ./go
        run: go mod verify

      - name: Run go mod tidy
        working-directory: ./go
        run: go mod tidy

      - name: Check if go.mod and go.sum are clean
        working-directory: ./go
        run: |
          git diff --exit-code go.mod go.sum || (echo "go.mod or go.sum is not clean" && exit 1)

      - name: Run go vet
        working-directory: ./go
        run: go vet ./...

      - name: Run tests with race detector
        working-directory: ./go
        run: go test -race -timeout=5m ./...

      - name: Run tests with coverage
        working-directory: ./go
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./go/coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: ./go
          args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build all packages
        working-directory: ./go
        run: go build ./...

      - name: Build example
        working-directory: ./go/examples/aws-sdk
        run: go build .
